{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\test\\\\Desktop\\\\FinalRingsStore\\\\client\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  steps,\n  onStepClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-900 mb-4\",\n      children: \"Customization Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-6\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onStepClick(step.step),\n            className: `w-12 h-12 rounded-full flex items-center justify-center text-sm font-semibold transition-all duration-200 ${step.completed ? 'bg-green-500 text-white hover:bg-green-600' : step.current ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-200 text-gray-500 hover:bg-gray-300'}`,\n            children: step.completed ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-6 h-6\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M5 13l4 4L19 7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this) : step.step\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-xs mt-2 font-medium ${step.completed ? 'text-green-600' : step.current ? 'text-blue-600' : 'text-gray-500'}`,\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex-1 h-1 mx-2 rounded-full ${steps[index + 1].completed || steps[index + 1].current ? 'bg-green-500' : 'bg-gray-200'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, step.step, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-200 rounded-full h-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-500\",\n        style: {\n          width: `${steps.filter(s => s.completed).length / steps.length * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between text-xs text-gray-500 mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Step \", steps.filter(s => s.completed).length, \" of \", steps.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [Math.round(steps.filter(s => s.completed).length / steps.length * 100), \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","steps","onStepClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","step","index","Fragment","onClick","completed","current","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","label","length","style","width","filter","s","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/test/Desktop/FinalRingsStore/client/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ProgressBar = ({ steps, onStepClick }) => {\r\n  return (\r\n    <div className=\"w-full\">\r\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Customization Progress</h3>\r\n      \r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        {steps.map((step, index) => (\r\n          <React.Fragment key={step.step}>\r\n            {/* Step Circle */}\r\n            <div className=\"flex flex-col items-center\">\r\n              <button\r\n                onClick={() => onStepClick(step.step)}\r\n                className={`w-12 h-12 rounded-full flex items-center justify-center text-sm font-semibold transition-all duration-200 ${\r\n                  step.completed\r\n                    ? 'bg-green-500 text-white hover:bg-green-600'\r\n                    : step.current\r\n                    ? 'bg-blue-500 text-white hover:bg-blue-600'\r\n                    : 'bg-gray-200 text-gray-500 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                {step.completed ? (\r\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                ) : (\r\n                  step.step\r\n                )}\r\n              </button>\r\n              \r\n              {/* Step Label */}\r\n              <span className={`text-xs mt-2 font-medium ${\r\n                step.completed\r\n                  ? 'text-green-600'\r\n                  : step.current\r\n                  ? 'text-blue-600'\r\n                  : 'text-gray-500'\r\n              }`}>\r\n                {step.label}\r\n              </span>\r\n            </div>\r\n            \r\n            {/* Connector Line */}\r\n            {index < steps.length - 1 && (\r\n              <div className={`flex-1 h-1 mx-2 rounded-full ${\r\n                steps[index + 1].completed || steps[index + 1].current\r\n                  ? 'bg-green-500'\r\n                  : 'bg-gray-200'\r\n              }`} />\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n      \r\n      {/* Progress Percentage */}\r\n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n        <div \r\n          className=\"bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-500\"\r\n          style={{ \r\n            width: `${(steps.filter(s => s.completed).length / steps.length) * 100}%` \r\n          }}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"flex justify-between text-xs text-gray-500 mt-2\">\r\n        <span>Step {steps.filter(s => s.completed).length} of {steps.length}</span>\r\n        <span>{Math.round((steps.filter(s => s.completed).length / steps.length) * 100)}% Complete</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}