{"ast":null,"code":"import { supabase } from './supabase';\nexport async function getUserId() {\n  const {\n    data: {\n      user\n    }\n  } = await supabase.auth.getUser();\n  return user === null || user === void 0 ? void 0 : user.id;\n}\nexport async function addToCartSupabase(item) {\n  const userId = await getUserId();\n  if (!userId) throw new Error('Not logged in');\n  // Check if item already exists\n  const {\n    data: existing\n  } = await supabase.from('cart_items').select('*').eq('user_id', userId).eq('ring_image_id', item.id).single();\n  if (existing) {\n    return supabase.from('cart_items').update({\n      quantity: existing.quantity + 1\n    }).eq('id', existing.id);\n  } else {\n    var _item$images;\n    return supabase.from('cart_items').insert({\n      user_id: userId,\n      ring_image_id: item.id,\n      design: item.design,\n      metal: item.metal,\n      diamond_shape: item.diamond_shape,\n      carat: item.carat,\n      price: item.price,\n      quantity: 1,\n      image_url: ((_item$images = item.images) === null || _item$images === void 0 ? void 0 : _item$images[item.metal]) || item.image_url || null\n    });\n  }\n}\nexport async function fetchCartSupabase() {\n  const userId = await getUserId();\n  if (!userId) return [];\n  const {\n    data\n  } = await supabase.from('cart_items').select('*').eq('user_id', userId);\n  return data || [];\n}\nexport async function removeFromCartSupabase(cartItemId) {\n  return supabase.from('cart_items').delete().eq('id', cartItemId);\n}\nexport async function clearCartSupabase() {\n  const userId = await getUserId();\n  return supabase.from('cart_items').delete().eq('user_id', userId);\n}","map":{"version":3,"names":["supabase","getUserId","data","user","auth","getUser","id","addToCartSupabase","item","userId","Error","existing","from","select","eq","single","update","quantity","_item$images","insert","user_id","ring_image_id","design","metal","diamond_shape","carat","price","image_url","images","fetchCartSupabase","removeFromCartSupabase","cartItemId","delete","clearCartSupabase"],"sources":["C:/Users/test/Desktop/FinalRingsStore/client/src/lib/cartSupabase.js"],"sourcesContent":["import { supabase } from './supabase';\r\n\r\nexport async function getUserId() {\r\n  const { data: { user } } = await supabase.auth.getUser();\r\n  return user?.id;\r\n}\r\n\r\nexport async function addToCartSupabase(item) {\r\n  const userId = await getUserId();\r\n  if (!userId) throw new Error('Not logged in');\r\n  // Check if item already exists\r\n  const { data: existing } = await supabase\r\n    .from('cart_items')\r\n    .select('*')\r\n    .eq('user_id', userId)\r\n    .eq('ring_image_id', item.id)\r\n    .single();\r\n  if (existing) {\r\n    return supabase\r\n      .from('cart_items')\r\n      .update({ quantity: existing.quantity + 1 })\r\n      .eq('id', existing.id);\r\n  } else {\r\n    return supabase.from('cart_items').insert({\r\n      user_id: userId,\r\n      ring_image_id: item.id,\r\n      design: item.design,\r\n      metal: item.metal,\r\n      diamond_shape: item.diamond_shape,\r\n      carat: item.carat,\r\n      price: item.price,\r\n      quantity: 1,\r\n      image_url: item.images?.[item.metal] || item.image_url || null\r\n    });\r\n  }\r\n}\r\n\r\nexport async function fetchCartSupabase() {\r\n  const userId = await getUserId();\r\n  if (!userId) return [];\r\n  const { data } = await supabase\r\n    .from('cart_items')\r\n    .select('*')\r\n    .eq('user_id', userId);\r\n  return data || [];\r\n}\r\n\r\nexport async function removeFromCartSupabase(cartItemId) {\r\n  return supabase.from('cart_items').delete().eq('id', cartItemId);\r\n}\r\n\r\nexport async function clearCartSupabase() {\r\n  const userId = await getUserId();\r\n  return supabase.from('cart_items').delete().eq('user_id', userId);\r\n} "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAErC,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAM;IAAEC,IAAI,EAAE;MAAEC;IAAK;EAAE,CAAC,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC;EACxD,OAAOF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,EAAE;AACjB;AAEA,OAAO,eAAeC,iBAAiBA,CAACC,IAAI,EAAE;EAC5C,MAAMC,MAAM,GAAG,MAAMR,SAAS,CAAC,CAAC;EAChC,IAAI,CAACQ,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAC7C;EACA,MAAM;IAAER,IAAI,EAAES;EAAS,CAAC,GAAG,MAAMX,QAAQ,CACtCY,IAAI,CAAC,YAAY,CAAC,CAClBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAEL,MAAM,CAAC,CACrBK,EAAE,CAAC,eAAe,EAAEN,IAAI,CAACF,EAAE,CAAC,CAC5BS,MAAM,CAAC,CAAC;EACX,IAAIJ,QAAQ,EAAE;IACZ,OAAOX,QAAQ,CACZY,IAAI,CAAC,YAAY,CAAC,CAClBI,MAAM,CAAC;MAAEC,QAAQ,EAAEN,QAAQ,CAACM,QAAQ,GAAG;IAAE,CAAC,CAAC,CAC3CH,EAAE,CAAC,IAAI,EAAEH,QAAQ,CAACL,EAAE,CAAC;EAC1B,CAAC,MAAM;IAAA,IAAAY,YAAA;IACL,OAAOlB,QAAQ,CAACY,IAAI,CAAC,YAAY,CAAC,CAACO,MAAM,CAAC;MACxCC,OAAO,EAAEX,MAAM;MACfY,aAAa,EAAEb,IAAI,CAACF,EAAE;MACtBgB,MAAM,EAAEd,IAAI,CAACc,MAAM;MACnBC,KAAK,EAAEf,IAAI,CAACe,KAAK;MACjBC,aAAa,EAAEhB,IAAI,CAACgB,aAAa;MACjCC,KAAK,EAAEjB,IAAI,CAACiB,KAAK;MACjBC,KAAK,EAAElB,IAAI,CAACkB,KAAK;MACjBT,QAAQ,EAAE,CAAC;MACXU,SAAS,EAAE,EAAAT,YAAA,GAAAV,IAAI,CAACoB,MAAM,cAAAV,YAAA,uBAAXA,YAAA,CAAcV,IAAI,CAACe,KAAK,CAAC,KAAIf,IAAI,CAACmB,SAAS,IAAI;IAC5D,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,eAAeE,iBAAiBA,CAAA,EAAG;EACxC,MAAMpB,MAAM,GAAG,MAAMR,SAAS,CAAC,CAAC;EAChC,IAAI,CAACQ,MAAM,EAAE,OAAO,EAAE;EACtB,MAAM;IAAEP;EAAK,CAAC,GAAG,MAAMF,QAAQ,CAC5BY,IAAI,CAAC,YAAY,CAAC,CAClBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAEL,MAAM,CAAC;EACxB,OAAOP,IAAI,IAAI,EAAE;AACnB;AAEA,OAAO,eAAe4B,sBAAsBA,CAACC,UAAU,EAAE;EACvD,OAAO/B,QAAQ,CAACY,IAAI,CAAC,YAAY,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAClB,EAAE,CAAC,IAAI,EAAEiB,UAAU,CAAC;AAClE;AAEA,OAAO,eAAeE,iBAAiBA,CAAA,EAAG;EACxC,MAAMxB,MAAM,GAAG,MAAMR,SAAS,CAAC,CAAC;EAChC,OAAOD,QAAQ,CAACY,IAAI,CAAC,YAAY,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAClB,EAAE,CAAC,SAAS,EAAEL,MAAM,CAAC;AACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}